plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
    id 'io.gitlab.arturbosch.detekt' version '1.22.0'
    id 'net.meilcli.hubber.toolchain.generator.dependencies'
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-gradle-plugin'

    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.22.0"

    library 'org.jetbrains.kotlin:kotlin-bom'
    library 'org.jetbrains.kotlin:kotlin-gradle-plugin'
    library 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    library 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    library 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2'
    library 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'
    library 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'
    library 'org.jetbrains.dokka:dokka-gradle-plugin:1.8.20'
    library 'org.jetbrains.dokka:dokka-core:1.8.20'
    library 'org.jetbrains.dokka:dokka-base:1.8.20'
    library 'org.jetbrains.dokka:dokka-base-test-utils:1.8.20'
    library 'org.jetbrains.dokka:dokka-test-api:1.8.20'
    library 'toolchain-dokka-plugin:toolchain-dokka-plugin'

    library 'com.google.devtools.ksp:symbol-processing-gradle-plugin:1.8.20-1.0.11'

    library 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.22.0'
    library 'io.gitlab.arturbosch.detekt:detekt-formatting:1.22.0'
    library 'io.gitlab.arturbosch.detekt:detekt-api:1.22.0'
    library 'io.gitlab.arturbosch.detekt:detekt-test:1.22.0'
    library 'toolchain-detekt-rule:toolchain-detekt-rule'

    library 'com.android.tools.build:gradle:8.0.0'
    library 'androidx.appcompat:appcompat:1.6.1'
    library 'androidx.activity:activity-compose:1.7.1'
    library 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    library 'androidx.navigation:navigation-compose:2.5.3'
    library 'androidx.hilt:hilt-navigation-compose:1.0.0'
    library 'androidx.room:room-runtime:2.5.1'
    library 'androidx.room:room-compiler:2.5.1'
    library 'androidx.room:room-testing:2.5.1'
    library 'androidx.datastore:datastore-preferences:1.0.0'
    library 'androidx.compose:compose-bom:2023.04.01'
    library 'androidx.compose.foundation:foundation'
    library 'androidx.compose.material3:material3'
    library 'androidx.compose.runtime:runtime'
    library 'androidx.compose.ui:ui'
    library 'androidx.compose.ui:ui-tooling-preview'
    library 'androidx.compose.ui:ui-tooling'
    library 'androidx.compose.ui:ui-test-junit4'
    library 'androidx.compose.ui:ui-test-manifest'

    library 'com.google.dagger:hilt-android:2.46'
    library 'com.google.dagger:hilt-android-compiler:2.46'
    library 'com.google.dagger:hilt-android-testing:2.46'
    library 'com.google.truth:truth:1.1.4'

    library 'io.github.raamcosta.compose-destinations:core:1.8.41-beta'
    library 'io.github.raamcosta.compose-destinations:ksp:1.8.41-beta'

    library 'junit:junit:4.13.2'

    library 'io.mockk:mockk:1.13.5'

    library 'androidx.test.ext:junit:1.1.5'
    library 'androidx.test.espresso:espresso-core:3.5.1'
}

gradlePlugin {
    plugins {
        dependencies {
            id = 'net.meilcli.hubber.toolchain.dependencies'
            implementationClass = 'net.meilcli.hubber.toolchain.dependencies.DependenciesPlugin'
        }
    }
}

def findDetektYmlDirectory() {
    def current = buildDir
    while (current.parentFile != null) {
        if (new File(current, "detekt.yml").exists()) {
            return current
        }
        current = current.parentFile
    }
    return current
}

detekt {
    buildUponDefaultConfig = true
    config = files("${findDetektYmlDirectory()}/detekt.yml")
    basePath = findDetektYmlDirectory()
}

tasks.named("detekt").configure {
    reports {
        // for root detekt task, its task extracts merge.xml
        xml.outputLocation.set(file("build/reports/detekt/merge.xml"))
    }
}

tasks.register("testAll") {
    dependsOn ':test'
}
